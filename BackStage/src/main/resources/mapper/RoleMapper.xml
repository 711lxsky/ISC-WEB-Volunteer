<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.isc.backstage.mapper.RoleMapper">

    <resultMap id="BaseResultMap" type="com.isc.backstage.entity.Role">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="parentId" column="parent_id" jdbcType="BIGINT"/>
            <result property="code" column="code" jdbcType="VARCHAR"/>
            <result property="name" column="name" jdbcType="VARCHAR"/>
            <result property="intro" column="intro" jdbcType="VARCHAR"/>
            <result property="created" column="created" jdbcType="TIMESTAMP"/>
            <result property="creator" column="creator" jdbcType="VARCHAR"/>
            <result property="edited" column="edited" jdbcType="TIMESTAMP"/>
            <result property="editor" column="editor" jdbcType="VARCHAR"/>
            <result property="deleted" column="deleted" jdbcType="TINYINT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,parent_id,code,
        name,intro,created,
        creator,edited,editor,
        deleted
    </sql>

    <select id="getRolesForUserById" resultType="com.isc.backstage.entity.Role">
        select
            r.id,
            r.parent_id,
            r.code,
            r.name,
            r.intro,
            r.created,
            r.creator,
            r.edited,
            r.editor,
            r.deleted
            from role as r
                join user_role as ur on r.id = ur.role_id
                join user as u on u.id = ur.user_id
        where u.id = #{userid}

    </select>

    <select id="getRoleIdForOneRoleName" parameterType="string" resultType="long">
        select id
            from role
        where name = #{roleName}
#         and deleted = 0
    </select>
    <select id="getRoleByUserId" parameterType="long" resultType="com.isc.backstage.entity.Role">
        select
            r.id,
            r.parent_id,
            r.code,
            r.name,
            r.intro,
            r.created,
            r.creator,
            r.edited,
            r.editor,
            r.deleted
            from role as r
            left join user_role as ur on r.id = ur.role_id
        where ur.user_id = #{userId}
    </select>
</mapper>
